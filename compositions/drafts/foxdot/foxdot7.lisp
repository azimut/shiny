(in-package :shiny)

(setf *fx-path* "/home/sendai/.local/lib64/python3.4/site-packages/FoxDot/snd/")
(fx-clear t)
(fx-load "x/upper/"        "X")
(fx-load "o/lower/"        "o")
(fx-load "_/hyphen/"       "-")
(fx-load "_/forwardslash/" "/")

(freset)
(fp 0 33)
(fp 1 11)

;; bd >>play ("(X[--])", amp=6,dur=0.5)
;; hh >>play ("-",       amp=4,dur=0.25)
;; sn >>play ("(o )/",   amp=2,sus=0.1)
(destructuring-bind (p1 p2 p3)
    (fx-pat "<X[--]><-><(o )/>")
  (defun bd (time)
    (fx-play (next p1) :amp .1 :dur .5)
    (aat (+ time #[.5 b]) #'bd it))
  (defun hh (time)
    (fx-play (next p2) :amp .05)
    (aat (+ time #[.25 b]) #'hh it))
  (defun sn (time)
    (fx-play (next p3) :amp .025)
    (aat (+ time #[1 b]) #'sn it)))

(defun bd ())
(defun hh ())
(defun sn ())
(aat (tempo-sync #[.5 b]) #'bd it)
(aat (tempo-sync #[.25 b]) #'hh it)
(aat (tempo-sync #[1 b]) #'sn it)

;; b1 >>bass(var([2,1,6,4],8), dur=4, chop=(8,5), bits=(4,3), pan=(-1,1), amp=1/2)
(fp 0 52)
(let ((scale (ov-scale :c4 :harmonic-minor))
      (var   (var '(2 1 6 4) 8))
      (pan   (make-cycle '(0 127))))
  (defun b1 (time)
    ;;(fpan 0 (next pan))
    (clc 21 (transpose (next var) 60) 30 1)
    ;;(p time (nth (next var) scale) 40 1 0)
    (aat (+ time #[2 b]) #'b1 it)))
(aat (tempo-sync #[4 b]) #'b1 it)
(defun b1 ())
;; b2 >>bass(dur=4, chop=(8,5), bits=(4,3), pan=(-1,1), amp=1/2)
(fp 1 0)
(let ((pan (make-cycle '(0 127))))
  (defun b2 (time)
    ;;(fpan 1 (next pan))
    ;;(p time 60 40 4 1)
    (clc 25 60 40 1)
    (aat (+ time #[4 b]) #'b2 it)))
(aat (tempo-sync #[4 b]) #'b2 it)
(defun b2 ())
;; b3 >>bass(([0, 1.1, 2, 0, 1.4]),chop=2, dur=0.5,rate=PRange (3)/4).solo()
(let ((var   (make-cycle '(0 1 2 0 1)))
      (scale (ov-scale :c4 :harmonic-minor)))
  (defun b3 (time)
    ;; (fluidsynth:all-notes-off *synth* 1)
    ;; (fluidsynth:all-notes-off *synth* 0)
    ;; (p time (nth (next var) scale) 40 (cosr .3 .1 5) 2)
    (clc 21 (nth (next var) scale) 40 (cosr .3 .1 5))
    (aat (+ time #[.5 b]) #'b3 it)))
(fp 2 68)
(aat (tempo-sync #[.5 b]) #'b3 it)
(defun b3 ())
