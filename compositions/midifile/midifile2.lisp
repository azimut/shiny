(in-package :shiny)

(defparameter *mf*
  "/home/sendai/Downloads/Chrono_Trigger_-_11_Secret_of_the_Forest.mid")

(defparameter *notes* (get-notes *mf*))
(defparameter *metre* (make-metre '(4) 1))
(defparameter *bass* (subseq (get-notes-durations-chords-silences *mf* 1) 0 20))
(defun f ())

(let ((note  (make-cycle (subseq *notes* 0 90)))
      (bass  (make-cycle *bass*)))
  (defun f (time &optional (beat 0))
    (let ((n (next note)))
      (p time (+ 24 (first (next bass))) 50 .2 1 :pan (pick 0 128))
      (play-taupe (+ -12 n) .3 :amp 200 :ramp (rcosr 10 5 1) :rfreq 1000))
    (aat (+ time #[.2 b]) #'f it (+ .2 beat))))

(fp 2 68)
(fp 1 74)
(f (now))
(fp 1 90)
(fg 1f0)

(defun f ())
(defparameter *notes* (get-notes *mf*))
(let ((notes (make-cycle (subseq *notes* 0 59))))
  (defun f (time)
    (pa time (next notes) .1 50 0 .1)
    (aat (+ time #[.3 b]) #'f it)))
(f (now))

(defparameter *mf* "/home/sendai/Downloads/Loro.mid")
(defparameter *notes* (get-notes *mf*))
(defparameter *notes-lead* (get-notes-durations-chords-silences *mf* 1))
(defun f ())
(let ((note (make-palindrome (subseq *notes* 0 30)))
      (lead (make-cycle      (subseq *notes-lead* 0 10))))
  (defun f (time &optional (beat 0))
    (let ((n (next note)))
      (play-taupe (+ 12 n) .3 :amp (rcosr 140 20 5) :ramp 1)
      (destructuring-bind (n d) (next lead)
        (play-taupe n (* .4 d) :rfreq 900  :ramp 10)))
    (aat (+ time #[.2 b]) #'f it (+ .2 beat))))
(f (now))

(let ((notes (make-cycle (subseq *notes-lead* 0 20))))
  (defun g (time)
    (let* ((n (next notes))
           (i (first n))
           (r (* .8 (second n))))
      (play-blue (+ 12 i) r)
      (aat (+ time #[r b]) #'g it))))

(g (now))
(defun g ())
