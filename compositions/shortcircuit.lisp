(in-package #:shiny)

;; FIXME: merge-beats is defined twice ATM, redefine it from lib/molecular.lisp

(f (now))
(fg 2f0)
(defun f ())
(mbox 4 32 :C 9 14.5 -14 14 (scale 0 'minor))
(defvar *scale* 1f0)
(defvar *color* (v! .3 .3 .3))
(defvar *rough* 1f0)
;; SHIMMER 3
(defparameter *exp* (make-line (iota 50 :start 0f0 :step .01)))
(setf *exposure* 0f0)
(let ((r  (make-cycle (parse-pattern (get-mbeats 0 8))))
      (n  (make-cycle (get-mnotes 0 8)))
      (a  (make-cycle (parse-pattern (get-mbeats 5 13))))
      (b  (make-cycle (get-mnotes 5 13)))
      (rr (make-cycle (parse-pattern (get-mbeats 10 17))))
      (nn (make-cycle (get-mnotes 10 17)))

      (appear (make-line (iota 20 :start .01 :step .01))))
  (defun f (time)
    (setf *exposure* (next *exp*))
    ;; (when (next a)
    ;;   (setf *rough* (random 1f0))
    ;;   (when (odds .1)
    ;;     (setf *light-pos* (v! (random 1000f0) (random 1000f0) (random 1100f0))))
    ;;   (p time (+ 12 (next b)) 30 (next appear) 0))
    (when (next r)
      (setf *scale* (random 2f0))
      (let ((nn (next n)))
        (play-midi time nn 50 .8 0)))
    (when (next rr)
      (setf *color* (v! .2 (random 1f0) .3))
      (let ((n (next nn)))
        (play-midi time n 50 .5 1)))
    (and (odds .4)
         (play-midi time 65 30 .2 0))
    (aat (+ time #[.2 b]) #'f it)))

(f (now))
(fp 0 52)
(fp 1 49)
(setf *exposure* 1f0)
