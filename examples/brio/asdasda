float tri(in float x){return abs(fract(x)-.5);}
vec3 tri3(in vec3 p){return vec3( tri(p.z+tri(p.y*1.)),
                                  tri(p.z+tri(p.x*1.)),
                                  tri(p.y+tri(p.x*1.)));}
                                 
mat2 m2 = mat2(0.970,  0.242, -0.242,  0.970);

float triNoise3d(in vec3 p)
{
  float z=1.4;
  float rz = 0.;
  vec3 bp = p;
  for (float i=0.; i<=3.; i++ )
    {
      vec3 dg = tri3(bp);
      p += (dg);

      bp *= 2.;
      z *= 1.5;
      p *= 1.2;
      //p.xz*= m2;
        
      rz+= (tri(p.z+
                tri(p.x+
                    tri(p.y))))
           /z;
      bp += 0.14;
    }
  return rz;
}

float fogmap(in vec3 p, in float d)
{
   p.x += time;
   p.z += time*.5;
    
    return triNoise3d(p*2.2/(d+8.0))*
      (smoothstep(.7,.0,p.y));
}

vec3 fog(in vec3 col, in vec3 ro, in vec3 rd, in float mt)
{
    float d = .5;
    for(int i=0; i<7; i++)
    {
        vec3  pos = ro + rd*d;
        float rz = fogmap(pos, d);
        col = mix(col,vec3(.85, .65, .5),clamp(rz*smoothstep(d,d*1.8,mt),
                                               0.,
                                               1.) );
        d *= 1.8;
        if (d>mt)break;
    }
    return col;
}
